#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E      &kp R                        &kp T                                    &kp Y       &kp U  &kp I      &kp O    &kp P
&kp A             &kp S     &kp D      &kp F                        &kp G        &mkp RCLK      &kp MINUS    &kp H       &kp J  &kp K      &kp L    &kp BSPC
&mt LEFT_SHIFT Z  &kp X     &kp C      &kp V                        &kp B        &kp TAB        &lt 6 COLON  &kp N       &kp M  &kp COMMA  &kp DOT  &kp RET
&kp LGUI          &kp LALT  &kp LCTRL  &lt_to_layer_0 2 INT_HENKAN  &lt 5 SPACE  &mkp LCLK      &lt 1 ENTER  &kp RSHIFT                             &kp RSHFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1   &kp F2  &kp F3  &kp F4  &kp F5                      &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp F11  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &kp F12
&trans   &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp N1    &kp N2     &kp N3       &kp N4         &kp N5                                                   &kp N6       &kp N7         &kp N8    &kp N9    &kp N0
&kp PLUS  &kp STAR   &kp EQUAL    &kp QUESTION   &kp GRAVE   &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp AT_SIGN  &kp LBKT       &kp RBKT  &kp LBRC  &kp RBRC
&kp PIPE  &kp TILDE  &kp INT_YEN  &kp BACKSLASH  &kp PERIOD  &kp EQUAL                    &kp SEMI        &kp COLON    &kp LESS_THAN  &kp GT    &kp FSLH  &kp UNDER
&trans    &trans     &trans       &trans         &trans      &trans                       &trans          &trans                                          &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE        &kp TAB                 &kp UP_ARROW    &kp LS(TAB)              &trans                       &trans  &trans          &kp UP_ARROW    &trans           &trans
&kp LEFT_CONTROL  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LEFT_SHIFT    &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans          &trans          &trans           &trans
&trans            &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&kp ESC    &kp LS(TAB)  &kp UP    &kp TAB    &trans                      &trans  &trans    &kp UP    &trans     &trans
&kp LCTRL  &kp LEFT     &kp DOWN  &kp RIGHT  &trans  &trans      &trans  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&kp RGUI   &kp LALT     &trans    &trans     &trans  &trans      &trans  &trans  &trans    &trans    &trans     &trans
&trans     &trans       &trans    &trans     &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
